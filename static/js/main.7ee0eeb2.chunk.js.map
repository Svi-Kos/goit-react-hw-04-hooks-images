{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","services/apiSevice.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setsSearchQuery","className","s","SearchForm","event","preventDefault","trim","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchImages","query","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","webformatURL","largeImageURL","tags","src","alt","ImageGalleryItemImage","onClick","basicLightbox","show","Button","props","centered","onLoadMore","ImageGallery","images","setImages","error","setError","status","setStatus","setPage","useEffect","imageAPI","newImages","hits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","length","alert","catch","color","height","width","style","textAlign","message","map","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ee0eeb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__tWf-v\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__1nXk8\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__a3R3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2k2tk\",\"SearchForm\":\"Searchbar_SearchForm__14SDX\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Zw-e\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2nYnU\",\"SearchFormInput\":\"Searchbar_SearchFormInput__Ij7kO\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from 'components/Searchbar/Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setsSearchQuery] = useState('');\n\n  const handleSearchQuery = event => {\n    setsSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    onSubmit(searchQuery);\n\n    setsSearchQuery('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchQuery}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","function fetchImages(query, page) {\n  const url = `https://pixabay.com/api/?q=${query}&page=${page}&key=18966198-cc77d794ba7550ec695901208&image_type=photo&orientation=horizontal&per_page=12`;\n  const errorMessage = 'Please enter more specific query';\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(errorMessage));\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","import s from '../ImageGalleryItem/ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags }) {\n  function showLargeImage() {\n    const instance = basicLightbox.create(`\n        <img src=\"${largeImageURL}\" alt=\"${tags}\" width=\"800\" height=\"600\">\n    `);\n\n    instance.show();\n  }\n\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={s.ImageGalleryItemImage}\n        onClick={showLargeImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import s from '../Button/Button.module.css';\nimport PropTypes from 'prop-types';\n\nconst Button = props => (\n  <div className={s.centered}>\n    <button type=\"button\" className={s.Button} onClick={props.onLoadMore}>\n      Load More\n    </button>\n  </div>\n);\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport imageAPI from '../../services/apiSevice';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from '../ImageGallery/ImageGallery.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ searchQuery }) {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    if (page === 1) {\n      setStatus('pending');\n    }\n\n    const errorMessage = 'Please enter more specific query';\n\n    imageAPI\n      .fetchImages(searchQuery, page)\n      .then(newImages => {\n        setImages(images => [...images, ...newImages.hits]);\n        setStatus('resolved');\n\n        if (page > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n\n        if (newImages.hits.length === 0) {\n          alert(errorMessage);\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n    switch (page) {\n      case 1:\n        setImages([]);\n\n        break;\n\n      default:\n        return;\n    }\n  }, [searchQuery, page]);\n\n  const onLoadMore = () => {\n    setPage(page + 1);\n    setStatus('resolved');\n  };\n\n  return (\n    <>\n      {status === 'pending' && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#303f9f\"\n          height={80}\n          width={80}\n          style={{ textAlign: 'center' }}\n        />\n      )}{' '}\n      {status === 'rejected' && <p>{error.message}</p>}{' '}\n      {status === 'resolved' && (\n        <>\n          <ul className={s.ImageGallery}>\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n              <ImageGalleryItem\n                key={id}\n                webformatURL={webformatURL}\n                largeImageURL={largeImageURL}\n                tags={tags}\n              />\n            ))}\n          </ul>\n          {images.length > 0 && <Button onLoadMore={onLoadMore} />}\n        </>\n      )}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","import { useState } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\nimport './App.css';\n\nfunction App() {\n  const [searchQuery, setsSearchQuery] = useState('');\n\n  return (\n    <div>\n      <Searchbar onSubmit={setsSearchQuery} />\n      <ImageGallery searchQuery={searchQuery} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1jcIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2sv3i\",\"centered\":\"Button_centered__1bqFe\"};"],"sourceRoot":""}